---
import React from "react";
import { ForwardRefEditor } from "@components/ForwardRefEditor";
import MainGridLayout from "@layouts/MainGridLayout.astro";
import Markdown from "@components/misc/Markdown.astro";
import I18nKey from "@i18n/i18nKey";
import { i18n } from "@i18n/translation";
import { Icon } from "astro-icon/components";
import { formatDateToYYYYMMDD } from "@/utils/date-utils";
import type { MDXEditorMethods } from "@mdxeditor/editor";

let editorRef = React.createRef<MDXEditorMethods | null>();

let editorProps = {
  markdown: `
    # Markdown Test Page #
    ## Markdown Test Page ##
    ### Markdown Test Page ###
    #### Markdown Test Page ####
    ##### Markdown Test Page #####

    [Link](https://google.com)
    - Bullet
      - Lesser bullet
    1. Number Bullet
      1. Number Bullet Wrong Number
      2. Number Bullet Wronger Number

    :::tip[Tip Admonition]
    Sample Content
    :::

    :::note[Note Admonition]
    Sample Content
    :::

    :::important[Important Admonition]
    Sample Content
    :::

    :::caution[Caution Admonition]
    Sample Content
    :::

    :::warning[Warning Admonition]
    Sample Content
    :::

    \`\`\`sql
    select * from table;
    \`\`\`

    # An h1 header

    Paragraphs are separated by a blank line.

    2nd paragraph. _Italic_, **bold**, and \`monospace\`. Itemized lists
    look like:

    - this one
    - that one
    - the other one

    Note that --- not considering the asterisk --- the actual text
    content starts at 4-columns in.

    > Block quotes are
    > written like so.
    >
    > They can span multiple paragraphs,
    > if you like.

    Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., "it's all
    in chapters 12--14"). Three dots ... will be converted to an ellipsis.
    Unicode is supported. â˜º

    ## An h2 header

    Here's a numbered list:

    1. first item
    2. second item
    3. third item

    Note again how the actual text starts at 4 columns in (4 characters
    from the left side). Here's a code sample:

        # Let me re-iterate ...
        for i in 1 .. 10 { do-something(i) }

    As you probably guessed, indented 4 spaces. By the way, instead of
    indenting the block, you can use delimited blocks, if you like:

    \`\`\`
    define foobar() {
        print "Welcome to flavor country!";
    }
    \`\`\`

        (which makes copying & pasting easier). You can optionally mark the
        delimited block for Pandoc to syntax highlight it:

    \`\`\`python
    import time
    # Quick, count to ten!
    for i in range(10):
        # (but not *too* quick)
        time.sleep(0.5)
        print i
    \`\`\`

    ### An h3 header

    Now a nested list:

    1.  First, get these ingredients:

        - carrots
        - celery
        - lentils

    2.  Boil some water.

    3.  Dump everything in the pot and follow
        this algorithm:

            find wooden spoon
            uncover pot
            stir
            cover pot
            balance wooden spoon precariously on pot handle
            wait 10 minutes
            goto first step (or shut off burner when done)

        Do not bump wooden spoon or it will fall.

    Notice again how text always lines up on 4-space indents (including
    that last line which continues item 3 above).

    Here's a link to [a website](http://foo.bar), to a [local
    doc](local-doc.html), and to a [section heading in the current
    doc](#an-h2-header). Here's a footnote [^1].

    [^1]: Footnote text goes here.

    Tables can look like this:

    size material color

    ---

    9 leather brown
    10 hemp canvas natural
    11 glass transparent

    Table: Shoes, their sizes, and what they're made of

    (The above is the caption for the table.) Pandoc also supports
    multi-line tables:

    ---

    keyword text

    ---

    red Sunsets, apples, and
    other red or reddish
    things.

    green Leaves, grass, frogs
    and other things it's
    not easy being.

    ---

    A horizontal rule follows.

    ---

    Here's a definition list:

    apples
    : Good for making applesauce.
    oranges
    : Citrus!
    tomatoes
    : There's no "e" in tomatoe.

    Again, text is indented 4 spaces. (Put a blank line between each
    term/definition pair to spread things out more.)

    Here's a "line block":

    | Line one
    | Line too
    | Line tree

    and images can be specified like so:

    [//]: # '![example image](./demo-banner.png "An exemplary image")'

    Inline math equations go in like so: $\omega = d\phi / dt$. Display
    math should get its own line and be put in in double-dollarsigns:

    $$I = \int \rho R^{2} dV$$

    And note that you can backslash-escape any punctuation characters
    which you wish to be displayed literally, ex.: \`foo\`, \*bar\*, etc.

  `,
};
---

<MainGridLayout>
  <div
    class="flex w-full rounded-[var(--radius-large)] overflow-hidden relative mb-4"
  >
    <div
      id="post-container"
      class:list={[
        "card-base z-10 px-6 md:px-9 pt-6 pb-4 relative w-full ",
        {},
      ]}
    >
      <!-- word count and reading time -->
      <div
        class="flex flex-row text-black/30 dark:text-white/30 gap-5 mb-3 transition onload-animation"
      >
        <div class="flex flex-row items-center">
          <div
            class="transition h-6 w-6 rounded-md bg-black/5 dark:bg-white/10 text-black/50 dark:text-white/50 flex items-center justify-center mr-2"
          >
            <Icon name="material-symbols:notes-rounded" />
          </div>
          <div class="text-sm">
            {"?"}
            {" " + i18n(I18nKey.wordsCount)}
          </div>
        </div>
        <div class="flex flex-row items-center">
          <div
            class="transition h-6 w-6 rounded-md bg-black/5 dark:bg-white/10 text-black/50 dark:text-white/50 flex items-center justify-center mr-2"
          >
            <Icon name="material-symbols:schedule-outline-rounded" />
          </div>
          <div class="text-sm">
            {"?"}
            {" " + i18n(I18nKey.minutesCount)}
          </div>
        </div>
      </div>

      <!-- title -->
      <div class="relative onload-animation">
        <div
          class="transition w-full block font-bold mb-3
                    text-3xl md:text-[2.25rem]/[2.75rem]
                    text-black/90 dark:text-white/90
                    md:before:w-1 before:h-5 before:rounded-md before:bg-[var(--primary)]
                    before:absolute before:top-[0.75rem] before:left-[-1.125rem]"
        >
          <input
            type="text"
            name="PostTitle"
            id="postTitle"
            class="w-full transition"
            style="background-color: var(--card-bg);"
            oninput="updateTitle()"
            placeholder="Enter post title"
          />
        </div>
      </div>

      <!-- metadata -->
      <div class="onload-animation">
        <div
          class:list={[
            "flex flex-wrap text-neutral-500 dark:text-neutral-400 items-center gap-4 gap-x-4 gap-y-2 mb-5",
          ]}
        >
          <!-- publish date -->
          <div class="flex items-center">
            <div class="meta-icon">
              <Icon
                name="material-symbols:calendar-today-outline-rounded"
                class="text-xl"
              />
            </div>
            <span class="text-50 text-sm font-medium"
              >{formatDateToYYYYMMDD(new Date())}</span
            >
          </div>

          <!-- categories -->
          <div class="flex items-center">
            <div class="meta-icon">
              <Icon
                name="material-symbols:book-2-outline-rounded"
                class="text-xl"
              />
            </div>
            <div class="flex flex-row flex-nowrap items-center w-fit">
              <input
                type="text"
                id="postCategory"
                class="link-lg transition text-sm font-medium hover:text-[var(--primary)] dark:hover:text-[var(--primary)]"
                style="background-color: var(--card-bg); field-sizing: content;"
                size="15"
                placeholder="Enter Category"
              />
            </div>
          </div>

          <!-- tags -->
          <div
            class:list={[
              "items-center w-fit",
              { flex: !false, "hidden md:flex": false },
            ]}
          >
            <div class="meta-icon">
              <Icon name="material-symbols:tag-rounded" class="text-xl" />
            </div>
            <div class="flex flex-row flex-nowrap items-center w-[50%]">
              <input
                type="text"
                id="postTag1"
                class="link-lg transition text-sm font-medium hover:text-[var(--primary)] dark:hover:text-[var(--primary)]"
                style="background-color: var(--card-bg); display: inline-block;"
                size="10"
                placeholder="Tag 1"
              />
              <div class:list={["mx-1.5 text-[var(--meta-divider)] text-sm"]}>
                /
              </div>
              <input
                type="text"
                id="postTag2"
                class="link-lg transition text-sm font-medium hover:text-[var(--primary)] dark:hover:text-[var(--primary)]"
                style="background-color: var(--card-bg); display: inline-block;"
                size="10"
                placeholder="Tag 2"
              />
              <div class:list={["mx-1.5 text-[var(--meta-divider)] text-sm"]}>
                /
              </div>
              <input
                type="text"
                id="postTag3"
                class="link-lg transition text-sm font-medium hover:text-[var(--primary)] dark:hover:text-[var(--primary)]"
                style="background-color: var(--card-bg); display: inline-block;"
                size="10"
                placeholder="Tag 3"
              />
            </div>
          </div>
        </div>

        <Markdown class="mb-6 markdown-content onload-animation">
          <ForwardRefEditor
            {...editorProps}
            ref={editorRef}
            client:only="react"
          />
        </Markdown>
      </div>
    </div>
  </div>
  </MainGridLayout>
